% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{deeptrafo}
\alias{deeptrafo}
\title{Deep Conditional Transformation Models}
\usage{
deeptrafo(
  formula,
  data,
  lag_formula = NULL,
  response_type = get_response_type(data[[all.vars(fml)[1]]]),
  order = get_order(response_type, data[[all.vars(fml)[1]]]),
  addconst_interaction = 0,
  family = "logistic",
  monitor_metrics = NULL,
  trafo_options = trafo_control(order_bsp = order, response_type = response_type),
  ...
)
}
\arguments{
\item{formula}{Formula specifying the response, shift, interaction and shared
terms as \code{response | interacting ~ shifting | shared}}

\item{data}{\code{list} or \code{data.frame} containing both structured and
unstructured data}

\item{lag_formula}{formula representing the optional predictor for lags of the
response as defined for auto-regressive transformation models (ATMs)}

\item{response_type}{character; type of response. One of \code{"continuous"},
\code{"survival"}, \code{"count"}, \code{"ordered"}}

\item{order}{integer; order of Bernstein polynomials or number of levels for
ordinal responses}

\item{addconst_interaction}{positive constant;
a constant added to the additive predictor of the interaction term.
If \code{NULL}, terms are left unchanged. If 0 and predictors have
negative values in their design matrix, the minimum value of all predictors
is added to ensure positivity. If > 0, the minimum value plus the
\code{addconst_interaction} is added to each predictor in the interaction
term.}

\item{family}{\code{tfd_distribution} or character; the base distribution for
transformation models. If character, can be \code{"normal"}, \code{"logistic"}
or \code{"gumbel"}.}

\item{trafo_options}{options for transformation models such as the basis
function used}

\item{...}{Arguments passed to \code{deepregression}}
}
\value{
An object of class \code{c("deeptrafo", "deepregression")}
}
\description{
Deep Conditional Transformation Models
}
\details{

}
\examples{
data("wine", package = "ordinal")
wine$noise <- rnorm(nrow(wine))
fml <- rating ~ 0 + temp
m <- deeptrafo(fml, wine, family = "logistic", monitor_metric = NULL)
m \%>\% fit(epochs = 20, batch_size = nrow(wine))
coef(m, which_param = "interacting")
coef(m, which_param = "shifting")

}
